{"version":3,"sources":["logo.svg","components/MaterialForm.js","components/MaterialNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","makeStyles","createStyles","textField","marginLeft","spacing","marginRight","width","createMuiTheme","typography","subtitle1","fontSize","BasicTextFields","state","event","upload","category","summary","regState","isVirtual","link","startDate","startTime","endDate","endTime","this","setState","target","name","value","classes","props","style","display","justifyContent","color","Button","variant","size","className","margin","FormControl","fullWidth","InputLabel","shrink","htmlFor","NativeSelect","inputProps","id","component","startIcon","Avatar","src","type","ThemeProvider","Typography","TextField","helperText","error","maxLength","label","alignItems","Switch","placeholder","defaultValue","InputLabelProps","step","React","Component","withStyles","useStyles","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","right","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Badge","badgeContent","max","purple","Drawer","anchor","paper","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.467969fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport clsx from 'clsx';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    subtitle1: {\r\n      fontSize: 24,\r\n    }\r\n  },\r\n});\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n      // marginLeft: theme.spacing(1),\r\n      // marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n    margin:{\r\n      marginRight:30\r\n    }\r\n});\r\n\r\n\r\nclass BasicTextFields extends React.Component {\r\n  state = {\r\n    event:'',\r\n    upload:[],\r\n    category:'',\r\n    summary:'',\r\n    regState:'',\r\n    isVirtual:false,\r\n    link:'',\r\n    startDate:'',\r\n    startTime:'',\r\n    endDate:'',\r\n    endTime:'',\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      [event.target.name]: event.target.value}\r\n      )\r\n  }\r\n\r\n  render(){\r\n  const {classes} = this.props;\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <div style={{display:'flex', justifyContent: 'space-between'}}>\r\n    <h3 style={{color:'purple'}}>Create Event</h3>\r\n    <div style={{display:'flex', marginRight:'15'}}>\r\n\r\n    <Button variant=\"contained\" color=\"primary\" size=\"small\" className={classes.margin}>\r\n        Create\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"default\" size=\"small\" className={classes.margin}>\r\n        Cancel\r\n      </Button>\r\n    </div>\r\n    \r\n    </div>\r\n    <form className=\"container mt-5\">\r\n      <FormControl fullWidth>\r\n      {/* <FormControl className={classes.formControl} fullWidth> */}\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          Add event in *\r\n        </InputLabel>\r\n        <NativeSelect\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-label-placeholder',\r\n          }}\r\n        >\r\n          <option value=\"\">Select...</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        component=\"label\"\r\n              startIcon={<Avatar src={'http://www.wpsimplesponsorships.com/wp-content/uploads/2019/05/cropped-icon-256x256.png'} />}\r\n      >\r\n        Upload Image\r\n        <input\r\n          type=\"file\"\r\n          style={{ display: \"none\" }}\r\n          \r\n        />\r\n      </Button>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"subtitle1\">Title *</Typography>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"title\"\r\n          helperText={`0/250`}\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          inputProps={{ maxLength: 2 }}\r\n        />\r\n      </ThemeProvider>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <FormControl fullWidth>\r\n      {/* <FormControl className={classes.formControl} fullWidth> */}\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\r\n          categories *\r\n        </InputLabel>\r\n        <NativeSelect\r\n          //value={state.age}\r\n          //onChange={handleChange}\r\n          inputProps={{\r\n            name: 'age',\r\n            id: 'age-native-label-placeholder',\r\n          }}\r\n        >\r\n          <option value=\"\">Select...</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"subtitle1\">Short summary *</Typography>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"title\"\r\n          helperText={`0/250`}\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          \r\n          inputProps={{ maxLength: 2 }}\r\n        />\r\n      </ThemeProvider>\r\n\r\n      <br></br>\r\n      <br></br>\r\n     \r\n\r\n      <Typography variant=\"subtitle1\">Type : Public</Typography>\r\n      \r\n      <br></br>\r\n      <br></br>\r\n\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"title\"\r\n          label=\"Registration State\"\r\n          helperText={`0/1024`}\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          inputProps={{ maxLength: 1024 }}\r\n        />\r\n\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center'}}>\r\n\r\n      <Typography variant=\"subtitle1\">Is this a virtual event ?</Typography>\r\n      <Switch\r\n        // checked={state.checkedB}\r\n        // onChange={handleChange}\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      </div>\r\n        \r\n      <br></br>\r\n      <br></br>\r\n\r\n<TextField\r\n          id=\"standard-full-width\"\r\n          name=\"title\"\r\n          placeholder=\"Online Link\"\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n        />\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <div>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"Start date *\"\r\n        type=\"date\"\r\n        defaultValue='2020-10-31'\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n        <TextField\r\n        id=\"time\"\r\n        label=\"Start time *\"\r\n        type=\"time\"\r\n        defaultValue=\"09:00\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n      />\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"End date *\"\r\n        type=\"date\"\r\n        defaultValue='2020-10-31'\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n        <TextField\r\n        id=\"time\"\r\n        label=\"End time *\"\r\n        type=\"time\"\r\n        defaultValue=\"17:00\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n      />\r\n      </div>\r\n      <br></br>\r\n      \r\n      <DropzoneArea/>\r\n\r\n\r\n    </form>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nexport default withStyles(styles) (BasicTextFields)","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport BasicTextFields from './MaterialForm'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    right: {\r\n      display: 'flex',\r\n      alignItems: 'right',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n    //   ...theme.mixins.toolbar,\r\n      justifyContent: 'space-between',\r\n    //   justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n         \r\n                <Typography variant=\"h6\" noWrap>\r\n                    Advancing For Humanity\r\n                </Typography>\r\n\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                    <Badge badgeContent={1} color=\"secondary\" max={99}>\r\n                        <GroupIcon style={{ color: purple[50] }} edge=\"end\"/>\r\n                    </Badge>\r\n                    \r\n                </IconButton>\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                        <Badge badgeContent={100} color=\"secondary\" max={99}>\r\n                            <NotificationsIcon style={{ color: purple[50] }}/>\r\n                        </Badge>\r\n                    \r\n                </IconButton>\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                    <MessageIcon style={{ color: purple[50] }}/>\r\n                </IconButton>\r\n                \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <BasicTextFields/>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Form from './components/Form'\n// import Navbar from './components/Navebar'\nimport PersistentDrawerLeft from './components/MaterialNavbar'\n\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      {/* <Navbar/>\n      <Form/> */}\n      <PersistentDrawerLeft/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}