{"version":3,"sources":["logo.svg","components/MaterialForm.js","components/MaterialNavbar.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","makeStyles","createStyles","textField","marginLeft","spacing","marginRight","width","createMuiTheme","typography","subtitle1","fontSize","BasicTextFields","state","event","upload","title","category","summary","regState","isVirtual","link","timezone","startDate","startTime","endDate","endTime","dropZoneArea","this","alert","setState","target","name","value","files","classes","props","style","display","justifyContent","color","Button","variant","size","type","className","margin","onClick","submit","FormControl","fullWidth","InputLabel","shrink","htmlFor","required","NativeSelect","inputProps","id","onChange","e","handleChange","component","startIcon","Avatar","src","handleChangeUpload","ThemeProvider","Typography","TextField","label","helperText","length","error","maxLength","alignItems","Switch","placeholder","helpertext","handleTimezone","defaultValue","InputLabelProps","step","React","Component","withStyles","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","right","content","flexGrow","contentShift","useStyles","grow","breakpoints","up","search","position","borderRadius","backgroundColor","fade","palette","common","white","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","sectionMobile","PrimarySearchAppBar","handleProfileMenuOpen","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","max","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","input","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ade28266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n// import OutlinedInput from '@material-ui/core/OutlinedInput';\r\n// import InputAdornment from '@material-ui/core/InputAdornment';\r\n// import clsx from 'clsx';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nimport SelectTimezoneMaterialUi from \"select-timezone-material-ui\";\r\n// import SelectTimezoneMaterialUi from \"input-material-ui\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  }),\r\n);\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    subtitle1: {\r\n      fontSize: 24,\r\n    }\r\n  },\r\n});\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n      // marginLeft: theme.spacing(1),\r\n      // marginRight: theme.spacing(1),\r\n      width: 200,\r\n      marginRight:20\r\n    },\r\n    timezone:{\r\n      width:600\r\n    },\r\n    margin:{\r\n      marginRight:20\r\n    }\r\n});\r\n\r\n\r\nclass BasicTextFields extends React.Component {\r\n  state = {\r\n\r\n    event:'',\r\n    upload:[],\r\n    title:'',\r\n    category:'',\r\n    summary:'',\r\n    regState:'',\r\n    isVirtual:false,\r\n    link:'',\r\n    timezone:'',\r\n    startDate:'',\r\n    startTime:'',\r\n    endDate:'',\r\n    endTime:'',\r\n    dropZoneArea:[]\r\n  }\r\n\r\n  submit(){\r\n    let {event,title,category,summary,timezone,startDate,startTime,endDate,endTime} = this.state\r\n    if(event === ''){\r\n      alert('Please Select Event')\r\n    }else if(title===''){\r\n      alert('Please Add Title')\r\n    }else if(category===''){\r\n      alert('Please Select Catagory')\r\n    }else if(summary===''){\r\n      alert('Please Add Summary')\r\n    }else if(timezone===''){\r\n      alert('Please Add Timezone')\r\n    }else if(startDate===''){\r\n      alert('Please Select Start Date')\r\n    }else if(startTime===''){\r\n      alert('Please Select Start Time')\r\n    }else if(endDate===''){\r\n      alert('Please Select End Date')\r\n    }else if(endTime===''){\r\n      alert('Please Select End Time')\r\n    }else{\r\n      alert('Submitted form successfully')\r\n    }\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      [event.target.name]: event.target.value}\r\n      )\r\n  }\r\n\r\n  handleChangeUpload(event){\r\n    this.setState({\r\n      [event.target.name]: event.target.files[0]}\r\n      )\r\n  }\r\n\r\n  handleTimezone(event){\r\n    this.setState({\r\n      timezone: event\r\n    })\r\n  }\r\n  \r\n\r\n  render(){\r\n  const {classes} = this.props;\r\n  // const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n    <div style={{display:'flex', justifyContent: 'space-between'}}>\r\n    <h3 style={{color:'purple'}}>Create Event</h3>\r\n    <div style={{display:'flex', marginRight:'15'}}>\r\n\r\n    <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n    type=\"submit\" className={classes.margin} onClick={() => {this.submit()}}>\r\n        Create\r\n    </Button>\r\n    <Button variant=\"contained\" color=\"default\" size=\"small\" className={classes.margin}>\r\n      Cancel\r\n    </Button>\r\n\r\n    </div>\r\n    \r\n    </div>\r\n    <form className=\"container mt-5\">\r\n      <FormControl fullWidth>\r\n      {/* <FormControl className={classes.formControl} fullWidth> */}\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\" required>\r\n          Add event in\r\n        </InputLabel>\r\n        <NativeSelect\r\n          inputProps={{\r\n            name: 'event',\r\n            id: 'age-native-label-placeholder',\r\n          }}\r\n          value={this.state.event}\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n        >\r\n          <option value=\"\" >Select...</option>\r\n          <option value={10} >Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        component=\"label\"\r\n              startIcon={<Avatar src={'http://www.wpsimplesponsorships.com/wp-content/uploads/2019/05/cropped-icon-256x256.png'} />}\r\n      >\r\n        Upload Image\r\n        <input\r\n          type=\"file\"\r\n          name=\"upload\"\r\n          style={{ display: \"none\" }}\r\n          onChange={(e) => {this.handleChangeUpload(e)}}\r\n          \r\n        />\r\n      </Button>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"subtitle1\">Title</Typography>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          helperText={`${this.state.title.length}/250`}\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          inputProps={{ maxLength: 250 }}\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n          required\r\n        />\r\n      </ThemeProvider>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <FormControl fullWidth>\r\n      {/* <FormControl className={classes.formControl} fullWidth> */}\r\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\" required>\r\n          categories\r\n        </InputLabel>\r\n        <NativeSelect\r\n          value={this.state.category}\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n          inputProps={{\r\n            name: 'category',\r\n            id: 'age-native-label-placeholder',\r\n          }}\r\n          required\r\n        >\r\n          <option value=\"\">Select...</option>\r\n          <option value={10}>Ten</option>\r\n          <option value={20}>Twenty</option>\r\n          <option value={30}>Thirty</option>\r\n        </NativeSelect>\r\n      </FormControl>\r\n\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <ThemeProvider theme={theme}>\r\n        <Typography variant=\"subtitle1\" required>Short summary</Typography>\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"summary\"\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n          helperText={`${this.state.summary.length}/250`}\r\n          fullWidth\r\n          //error = {1 == false ? true : false}\r\n          //error={text === \"hello\"}\r\n          inputProps={{ maxLength: 250 }}\r\n        />\r\n      </ThemeProvider>\r\n\r\n      <br></br>\r\n      <br></br>\r\n     \r\n\r\n      <Typography variant=\"subtitle1\">Type : Public</Typography>\r\n      \r\n      <br></br>\r\n      <br></br>\r\n\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"regState\"\r\n          label=\"Registration State\"\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n          helperText={`${this.state.regState.length}/1024`}\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          inputProps={{ maxLength: 1024 }}\r\n        />\r\n\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <div style={{\r\n          display: 'flex',\r\n          alignItems: 'center'}}>\r\n\r\n      <Typography variant=\"subtitle1\">Is this a virtual event ?</Typography>\r\n      <Switch\r\n        //checked={this.state.isVirtual}\r\n        name=\"isVirtual\"\r\n        onChange={(e)=>{this.setState({isVirtual: !this.state.isVirtual})}}\r\n        color=\"primary\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      </div>\r\n        \r\n      <br></br>\r\n      <br></br>\r\n\r\n      <TextField\r\n          id=\"standard-full-width\"\r\n          name=\"link\"\r\n          placeholder=\"Online Link\"\r\n          fullWidth\r\n          error = {1 == false ? true : false}\r\n          onChange={(e)=>{this.handleChange(e)}}\r\n        />\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <SelectTimezoneMaterialUi\r\n          label=\"Select timezone *\"\r\n          name=\"timezone\"\r\n          helpertext=\"Please select a timezone from the list\"\r\n          required\r\n          onChange={(e)=>{this.handleTimezone(e)}}\r\n          className={classes.timezone}\r\n        />\r\n      \r\n      <br></br>\r\n      <br></br>\r\n\r\n      <div>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"Start date *\"\r\n        type=\"date\"\r\n        defaultValue='2020-10-31'\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        name=\"startDate\"\r\n        onChange={(e)=>{this.handleChange(e)}}\r\n      />\r\n        <TextField\r\n        id=\"time\"\r\n        label=\"Start time *\"\r\n        type=\"time\"\r\n        defaultValue=\"09:00\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n        name=\"startTime\"\r\n        onChange={(e)=>{this.handleChange(e)}}\r\n      />\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n      <TextField\r\n        id=\"date\"\r\n        label=\"End date *\"\r\n        type=\"date\"\r\n        defaultValue='2020-10-31'\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        name=\"endDate\"\r\n        onChange={(e)=>{this.handleChange(e)}}\r\n      />\r\n        <TextField\r\n        id=\"time\"\r\n        label=\"End time *\"\r\n        type=\"time\"\r\n        defaultValue=\"17:00\"\r\n        className={classes.textField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        inputProps={{\r\n          step: 300, // 5 min\r\n        }}\r\n        name=\"endTime\"\r\n        onChange={(e)=>{this.handleChange(e)}}\r\n      />\r\n      </div>\r\n      <br></br>\r\n      \r\n      \r\n      <DropzoneArea name=\"dropZoneArea\" onChange={(e)=>{this.setState({dropZoneArea:e})}}/>\r\n      \r\n\r\n    </form>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nexport default withStyles(styles) (BasicTextFields)","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport BasicTextFields from './MaterialForm'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    right: {\r\n      display: 'flex',\r\n      alignItems: 'right',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n    //   ...theme.mixins.toolbar,\r\n      justifyContent: 'space-between',\r\n    //   justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n         \r\n                <Typography variant=\"h6\" noWrap>\r\n                    Advancing For Humanity\r\n                </Typography>\r\n\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                    <Badge badgeContent={1} color=\"secondary\" max={99}>\r\n                        <GroupIcon style={{ color: purple[50] }} edge=\"end\"/>\r\n                    </Badge>\r\n                    \r\n                </IconButton>\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                        <Badge badgeContent={100} color=\"secondary\" max={99}>\r\n                            <NotificationsIcon style={{ color: purple[50] }}/>\r\n                        </Badge>\r\n                    \r\n                </IconButton>\r\n                <IconButton edge=\"end\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                    <MessageIcon style={{ color: purple[50] }}/>\r\n                </IconButton>\r\n                \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <BasicTextFields/>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n// import AccountCircle from '@material-ui/icons/AccountCircle';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport BasicTextFields from './MaterialForm'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      //borderRadius: theme.shape.borderRadius,\r\n      borderRadius: 10,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n    //   alignItems: 'center',\r\n    //   justifyContent: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PrimarySearchAppBar() {\r\n   const classes = useStyles();\r\n//   const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n//   const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n//   const isMenuOpen = Boolean(anchorEl);\r\n//   const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    //setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    //setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    //setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    //setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      //anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      //open={isMenuOpen}\r\n      //onClose={handleMenuClose}\r\n    >\r\n      <MenuItem \r\n      //onClick={handleMenuClose}\r\n      >Profile</MenuItem>\r\n      <MenuItem \r\n      //onClick={handleMenuClose}\r\n      >My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      //anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      //open={isMobileMenuOpen}\r\n      //onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={1} color=\"secondary\" max={99}>\r\n                        <GroupIcon/>\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Group icon</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={100} color=\"secondary\" max={99}>\r\n                          <NotificationsIcon/>\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <MessageIcon/>\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Advancing For Humanity\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={1} color=\"secondary\">\r\n                <GroupIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={100} color=\"secondary\" max={99}>\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MessageIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              //onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n      <div className=\"mt-1 ml-5\">\r\n        <BasicTextFields />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import Form from './components/Form'\n// import Navbar from './components/Navebar'\nimport PersistentDrawerLeft from './components/MaterialNavbar'\nimport PrimarySearchAppBar from './components/Navbar'\n\n\n\nfunction App() {\n  return (\n    <div >\n      {/* <Navbar/>\n      <Form/> */}\n      <PrimarySearchAppBar/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}